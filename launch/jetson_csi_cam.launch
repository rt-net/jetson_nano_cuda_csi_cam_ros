<?xml version="1.0"?>
<launch>
  <!-- Command Line Arguments -->
  <arg name="sensor_id" default="0" />                       <!-- The sensor id of the camera -->
  <arg name="cam_name" default="csi_cam_$(arg sensor_id)" /> <!-- The name of the camera (corrsponding to the camera info) -->
  <arg name="frame_id" default="/$(arg cam_name)_link" />    <!-- The TF frame ID. -->
  <arg name="sync_sink" default="true" />                    <!-- Synchronize the app sink. Setting this to false may resolve problems with sub-par framerates. -->
  <arg name="width" default="640" />                         <!-- Image Width to stream -->
  <arg name="height" default="480" />                        <!-- Image Height to stream -->
  <arg name="fps" default="20" />                            <!-- Desired framerate. True framerate may not reach this if set too high. -->
  <arg name="flip_method" default="rotate-180" />            <!-- flip_method in str -->
  <arg name="load_camera_info" default="true" />             <!-- Load the camera info or not-->
  <arg name="input_loop" default="false" />             <!-- Load the camera info or not-->

  <!-- Make arguments available to parameter server -->
  <param name="$(arg cam_name)/camera_id" type="int" value="$(arg sensor_id)" />
  <param name="$(arg cam_name)/image_width" type="int" value="$(arg width)" />
  <param name="$(arg cam_name)/image_height" type="int" value="$(arg height)" />
  <param name="$(arg cam_name)/target_fps" type="int" value="$(arg fps)" />

  <!-- Define the camera calibration parameter -->
  <param name="$(arg cam_name)/camera_info_url" type="string" if="$(arg load_camera_info)"
    value="package://jetson_nano_cuda_csi_cam/config/sainsmart-imx219-jetson-nano-160deg-fov-$(arg cam_name).yaml" />

  <node pkg="jetson_nano_cuda_csi_cam" type="video_stream" name="$(arg cam_name)">
    <param name="resource" value="csi://$(arg sensor_id)"/>
    <param name="loop" value="$(arg input_loop)"/>
    <param name="flip_method" value="$(arg flip_method)"/>
  </node>
  <node name="image_republish_0" pkg="image_transport" type="republish" args="raw compressed">
    <remap from="in" to="/$(arg cam_name)/image_raw" />
    <remap from="out" to="/$(arg cam_name)/image_raw" />
  </node>
</launch>
